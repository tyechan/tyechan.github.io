{"meta":{"title":"晨天雨小寒","subtitle":"好好学习，天天向上","description":"","author":"John Doe","url":"https://blog.tychen.cn","root":"/"},"pages":[{"title":"about","date":"2023-11-14T02:10:43.000Z","updated":"2023-11-30T05:17:35.207Z","comments":true,"path":"about/index.html","permalink":"https://blog.tychen.cn/about/index.html","excerpt":"","text":""},{"title":"archives","date":"2023-11-14T02:10:37.000Z","updated":"2023-11-30T05:17:35.207Z","comments":true,"path":"archives/index.html","permalink":"https://blog.tychen.cn/archives/index.html","excerpt":"","text":""},{"title":"categories","date":"2023-11-14T02:10:27.000Z","updated":"2023-11-30T05:17:35.207Z","comments":true,"path":"categories/index.html","permalink":"https://blog.tychen.cn/categories/index.html","excerpt":"","text":""},{"title":"","date":"2023-11-30T05:17:35.207Z","updated":"2023-11-30T05:17:35.207Z","comments":true,"path":"js/digitalrain.js","permalink":"https://blog.tychen.cn/js/digitalrain.js","excerpt":"","text":"window.onload = function () { //获取画布对象 var canvas = document.getElementById(\"canvas\"); //获取画布的上下文 var context = canvas.getContext(\"2d\"); var s = window.screen; var W = (canvas.width = s.width); var H = canvas.height; //获取浏览器屏幕的宽度和高度 //var W = window.innerWidth; //var H = window.innerHeight; //设置canvas的宽度和高度 canvas.width = W; canvas.height = H; //每个文字的字体大小 var fontSize = 12; //计算列 var colunms = Math.floor(W / fontSize); //记录每列文字的y轴坐标 var drops = []; //给每一个文字初始化一个起始点的位置 for (var i = 0; i < colunms; i++) { drops.push(0); } //运动的文字 var str = \"WELCOME TO WWW.ITRHX.COM\"; //4:fillText(str,x,y);原理就是去更改y的坐标位置 //绘画的函数 function draw() { context.fillStyle = \"rgba(238,238,238,.08)\"; //遮盖层 context.fillRect(0, 0, W, H); //给字体设置样式 context.font = \"600 \" + fontSize + \"px Georgia\"; //给字体添加颜色 context.fillStyle = [ \"#33B5E5\", \"#0099CC\", \"#AA66CC\", \"#9933CC\", \"#99CC00\", \"#669900\", \"#FFBB33\", \"#FF8800\", \"#FF4444\", \"#CC0000\", ][parseInt(Math.random() * 10)]; //randColor();可以rgb,hsl, 标准色，十六进制颜色 //写入画布中 for (var i = 0; i < colunms; i++) { var index = Math.floor(Math.random() * str.length); var x = i * fontSize; var y = drops[i] * fontSize; context.fillText(str[index], x, y); //如果要改变时间，肯定就是改变每次他的起点 if (y >= canvas.height && Math.random() > 0.99) { drops[i] = 0; } drops[i]++; } } function randColor() { //随机颜色 var r = Math.floor(Math.random() * 256); var g = Math.floor(Math.random() * 256); var b = Math.floor(Math.random() * 256); return \"rgb(\" + r + \",\" + g + \",\" + b + \")\"; } draw(); setInterval(draw, 35); };"},{"title":"","date":"2023-11-30T05:17:35.207Z","updated":"2023-11-30T05:17:35.207Z","comments":true,"path":"js/click_show_text.js","permalink":"https://blog.tychen.cn/js/click_show_text.js","excerpt":"","text":"var a_idx = 0; jQuery(document).ready(function ($) { $(\"body\").click(function (e) { var a = new Array( \"富强\", \"民主\", \"文明\", \"和谐\", \"自由\", \"平等\", \"公正\", \"法治\", \"爱国\", \"敬业\", \"诚信\", \"友善\" ); var $i = $(\"\").text(a[a_idx]); a_idx = (a_idx + 1) % a.length; var x = e.pageX, y = e.pageY; $i.css({ \"z-index\": 5, top: y - 20, left: x, position: \"absolute\", \"font-weight\": \"bold\", color: \"#FF0000\", }); $(\"body\").append($i); $i.animate( { top: y - 180, opacity: 0, }, 3000, function () { $i.remove(); } ); }); setTimeout(\"delay()\", 2000); }); function delay() { $(\".buryit\").removeAttr(\"onclick\"); }"},{"title":"","date":"2023-11-30T05:17:35.207Z","updated":"2023-11-30T05:17:35.207Z","comments":true,"path":"js/fireworks.js","permalink":"https://blog.tychen.cn/js/fireworks.js","excerpt":"","text":"\"use strict\"; function updateCoords(e) { (pointerX = (e.clientX || e.touches[0].clientX) - canvasEl.getBoundingClientRect().left), (pointerY = e.clientY || e.touches[0].clientY - canvasEl.getBoundingClientRect().top); } function setParticuleDirection(e) { var t = (anime.random(0, 360) * Math.PI) / 180, a = anime.random(50, 180), n = [-1, 1][anime.random(0, 1)] * a; return { x: e.x + n * Math.cos(t), y: e.y + n * Math.sin(t) }; } function createParticule(e, t) { var a = {}; return ( (a.x = e), (a.y = t), (a.color = colors[anime.random(0, colors.length - 1)]), (a.radius = anime.random(16, 32)), (a.endPos = setParticuleDirection(a)), (a.draw = function () { ctx.beginPath(), ctx.arc(a.x, a.y, a.radius, 0, 2 * Math.PI, !0), (ctx.fillStyle = a.color), ctx.fill(); }), a ); } function createCircle(e, t) { var a = {}; return ( (a.x = e), (a.y = t), (a.color = \"#F00\"), (a.radius = 0.1), (a.alpha = 0.5), (a.lineWidth = 6), (a.draw = function () { (ctx.globalAlpha = a.alpha), ctx.beginPath(), ctx.arc(a.x, a.y, a.radius, 0, 2 * Math.PI, !0), (ctx.lineWidth = a.lineWidth), (ctx.strokeStyle = a.color), ctx.stroke(), (ctx.globalAlpha = 1); }), a ); } function renderParticule(e) { for (var t = 0; t < e.animatables.length; t++) { e.animatables[t].target.draw(); } } function animateParticules(e, t) { for (var a = createCircle(e, t), n = [], i = 0; i < numberOfParticules; i++) { n.push(createParticule(e, t)); } anime .timeline() .add({ targets: n, x: function (e) { return e.endPos.x; }, y: function (e) { return e.endPos.y; }, radius: 0.1, duration: anime.random(1200, 1800), easing: \"easeOutExpo\", update: renderParticule, }) .add({ targets: a, radius: anime.random(80, 160), lineWidth: 0, alpha: { value: 0, easing: \"linear\", duration: anime.random(600, 800) }, duration: anime.random(1200, 1800), easing: \"easeOutExpo\", update: renderParticule, offset: 0, }); } function debounce(e, t) { var a; return function () { var n = this, i = arguments; clearTimeout(a), (a = setTimeout(function () { e.apply(n, i); }, t)); }; } var canvasEl = document.querySelector(\".fireworks\"); if (canvasEl) { var ctx = canvasEl.getContext(\"2d\"), numberOfParticules = 30, pointerX = 0, pointerY = 0, tap = \"mousedown\", colors = [\"#FF1461\", \"#18FF92\", \"#5A87FF\", \"#FBF38C\"], setCanvasSize = debounce(function () { (canvasEl.width = 2 * window.innerWidth), (canvasEl.height = 2 * window.innerHeight), (canvasEl.style.width = window.innerWidth + \"px\"), (canvasEl.style.height = window.innerHeight + \"px\"), canvasEl.getContext(\"2d\").scale(2, 2); }, 500), render = anime({ duration: 1 / 0, update: function () { ctx.clearRect(0, 0, canvasEl.width, canvasEl.height); }, }); document.addEventListener( tap, function (e) { \"sidebar\" !== e.target.id && \"toggle-sidebar\" !== e.target.id && \"A\" !== e.target.nodeName && \"IMG\" !== e.target.nodeName && (render.play(), updateCoords(e), animateParticules(pointerX, pointerY)); }, !1 ), setCanvasSize(), window.addEventListener(\"resize\", setCanvasSize, !1); } (\"use strict\"); function updateCoords(e) { (pointerX = (e.clientX || e.touches[0].clientX) - canvasEl.getBoundingClientRect().left), (pointerY = e.clientY || e.touches[0].clientY - canvasEl.getBoundingClientRect().top); } function setParticuleDirection(e) { var t = (anime.random(0, 360) * Math.PI) / 180, a = anime.random(50, 180), n = [-1, 1][anime.random(0, 1)] * a; return { x: e.x + n * Math.cos(t), y: e.y + n * Math.sin(t) }; } function createParticule(e, t) { var a = {}; return ( (a.x = e), (a.y = t), (a.color = colors[anime.random(0, colors.length - 1)]), (a.radius = anime.random(16, 32)), (a.endPos = setParticuleDirection(a)), (a.draw = function () { ctx.beginPath(), ctx.arc(a.x, a.y, a.radius, 0, 2 * Math.PI, !0), (ctx.fillStyle = a.color), ctx.fill(); }), a ); } function createCircle(e, t) { var a = {}; return ( (a.x = e), (a.y = t), (a.color = \"#F00\"), (a.radius = 0.1), (a.alpha = 0.5), (a.lineWidth = 6), (a.draw = function () { (ctx.globalAlpha = a.alpha), ctx.beginPath(), ctx.arc(a.x, a.y, a.radius, 0, 2 * Math.PI, !0), (ctx.lineWidth = a.lineWidth), (ctx.strokeStyle = a.color), ctx.stroke(), (ctx.globalAlpha = 1); }), a ); } function renderParticule(e) { for (var t = 0; t < e.animatables.length; t++) { e.animatables[t].target.draw(); } } function animateParticules(e, t) { for (var a = createCircle(e, t), n = [], i = 0; i < numberOfParticules; i++) { n.push(createParticule(e, t)); } anime .timeline() .add({ targets: n, x: function (e) { return e.endPos.x; }, y: function (e) { return e.endPos.y; }, radius: 0.1, duration: anime.random(1200, 1800), easing: \"easeOutExpo\", update: renderParticule, }) .add({ targets: a, radius: anime.random(80, 160), lineWidth: 0, alpha: { value: 0, easing: \"linear\", duration: anime.random(600, 800) }, duration: anime.random(1200, 1800), easing: \"easeOutExpo\", update: renderParticule, offset: 0, }); } function debounce(e, t) { var a; return function () { var n = this, i = arguments; clearTimeout(a), (a = setTimeout(function () { e.apply(n, i); }, t)); }; } var canvasEl = document.querySelector(\".fireworks\"); if (canvasEl) { var ctx = canvasEl.getContext(\"2d\"), numberOfParticules = 30, pointerX = 0, pointerY = 0, tap = \"mousedown\", colors = [\"#FF1461\", \"#18FF92\", \"#5A87FF\", \"#FBF38C\"], setCanvasSize = debounce(function () { (canvasEl.width = 2 * window.innerWidth), (canvasEl.height = 2 * window.innerHeight), (canvasEl.style.width = window.innerWidth + \"px\"), (canvasEl.style.height = window.innerHeight + \"px\"), canvasEl.getContext(\"2d\").scale(2, 2); }, 500), render = anime({ duration: 1 / 0, update: function () { ctx.clearRect(0, 0, canvasEl.width, canvasEl.height); }, }); document.addEventListener( tap, function (e) { \"sidebar\" !== e.target.id && \"toggle-sidebar\" !== e.target.id && \"A\" !== e.target.nodeName && \"IMG\" !== e.target.nodeName && (render.play(), updateCoords(e), animateParticules(pointerX, pointerY)); }, !1 ), setCanvasSize(), window.addEventListener(\"resize\", setCanvasSize, !1); }"},{"title":"","date":"2023-11-30T05:17:35.207Z","updated":"2023-11-30T05:17:35.207Z","comments":true,"path":"js/love.js","permalink":"https://blog.tychen.cn/js/love.js","excerpt":"","text":"!(function (e, t, a) { function n() { c( \".heart{width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);}.heart:after,.heart:before{content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 500%;-moz-border-radius: 50%;position: fixed;}.heart:after{top: -5px;}.heart:before{left: -5px;}\" ), o(), r(); } function r() { for (var e = 0; e < d.length; e++) d[e].alpha"},{"title":"","date":"2023-11-30T05:17:35.207Z","updated":"2023-11-30T05:17:35.207Z","comments":true,"path":"js/snow.js","permalink":"https://blog.tychen.cn/js/snow.js","excerpt":"","text":"/*样式一*/ (function ($) { $.fn.snow = function (options) { var $flake = $('') .css({ position: \"absolute\", \"z-index\": \"9999\", top: \"-50px\" }) .html(\"&#10052;\"), documentHeight = $(document).height(), documentWidth = $(document).width(), defaults = { minSize: 10, maxSize: 20, newOn: 1000, flakeColor: \"#AFDAEF\" /* 此处可以定义雪花颜色，若要白色可以改为#FFFFFF */, }, options = $.extend({}, defaults, options); var interval = setInterval(function () { var startPositionLeft = Math.random() * documentWidth - 100, startOpacity = 0.5 + Math.random(), sizeFlake = options.minSize + Math.random() * options.maxSize, endPositionTop = documentHeight - 200, endPositionLeft = startPositionLeft - 500 + Math.random() * 500, durationFall = documentHeight * 10 + Math.random() * 5000; $flake .clone() .appendTo(\"body\") .css({ left: startPositionLeft, opacity: startOpacity, \"font-size\": sizeFlake, color: options.flakeColor, }) .animate( { top: endPositionTop, left: endPositionLeft, opacity: 0.2, }, durationFall, \"linear\", function () { $(this).remove(); } ); }, options.newOn); }; })(jQuery); $(function () { $.fn.snow({ minSize: 5 /* 定义雪花最小尺寸 */, maxSize: 50 /* 定义雪花最大尺寸 */, newOn: 300 /* 定义密集程度，数字越小越密集 */, }); }); /*样式二*/ /* 控制下雪 */ function snowFall(snow) { /* 可配置属性 */ snow = snow || {}; this.maxFlake = snow.maxFlake || 200; /* 最多片数 */ this.flakeSize = snow.flakeSize || 10; /* 雪花形状 */ this.fallSpeed = snow.fallSpeed || 1; /* 坠落速度 */ } /* 兼容写法 */ requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame || window.oRequestAnimationFrame || function (callback) { setTimeout(callback, 1000 / 60); }; cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame || window.oCancelAnimationFrame; /* 开始下雪 */ snowFall.prototype.start = function () { /* 创建画布 */ snowCanvas.apply(this); /* 创建雪花形状 */ createFlakes.apply(this); /* 画雪 */ drawSnow.apply(this); }; /* 创建画布 */ function snowCanvas() { /* 添加Dom结点 */ var snowcanvas = document.createElement(\"canvas\"); snowcanvas.id = \"snowfall\"; snowcanvas.width = window.innerWidth; snowcanvas.height = document.body.clientHeight; snowcanvas.setAttribute( \"style\", \"position:absolute; top: 0; left: 0; z-index: 1; pointer-events: none;\" ); document.getElementsByTagName(\"body\")[0].appendChild(snowcanvas); this.canvas = snowcanvas; this.ctx = snowcanvas.getContext(\"2d\"); /* 窗口大小改变的处理 */ window.onresize = function () { snowcanvas.width = window.innerWidth; /* snowcanvas.height = window.innerHeight */ }; } /* 雪运动对象 */ function flakeMove(canvasWidth, canvasHeight, flakeSize, fallSpeed) { this.x = Math.floor(Math.random() * canvasWidth); /* x坐标 */ this.y = Math.floor(Math.random() * canvasHeight); /* y坐标 */ this.size = Math.random() * flakeSize + 2; /* 形状 */ this.maxSize = flakeSize; /* 最大形状 */ this.speed = Math.random() * 1 + fallSpeed; /* 坠落速度 */ this.fallSpeed = fallSpeed; /* 坠落速度 */ this.velY = this.speed; /* Y方向速度 */ this.velX = 0; /* X方向速度 */ this.stepSize = Math.random() / 30; /* 步长 */ this.step = 0; /* 步数 */ } flakeMove.prototype.update = function () { var x = this.x, y = this.y; /* 左右摆动(余弦) */ this.velX *= 0.98; if (this.velY = canvas.width || this.x = canvas.height || this.y"}],"posts":[{"title":"Linux 安装 Oracle19c for Docker","slug":"Linux-安装-Oracle19c-for-Docker","date":"2023-11-30T02:11:21.000Z","updated":"2023-11-30T05:17:35.207Z","comments":true,"path":"/2023/11/30/Linux-安装-Oracle19c-for-Docker/","permalink":"https://blog.tychen.cn/2023/11/30/Linux-%E5%AE%89%E8%A3%85-Oracle19c-for-Docker/","excerpt":"Linux 安装 Oracle 数据库比较繁琐耗时，为了更快的进入学习状态，采用 Docker 快速安装部署。 为什么选择 Oracle19c ？一、19c 和 12c 差不太多；二、有现成的Docker Image可以使用。 如需安装其他版本 Oracle 数据库，可以使用 Oracle 官方 Dockerfile 自己编译安装。 参考资料：Linux下安装docker以及docker安装Oracle19c的全部详细过程及各种问题解决","text":"Linux 安装 Oracle 数据库比较繁琐耗时，为了更快的进入学习状态，采用 Docker 快速安装部署。 为什么选择 Oracle19c ？一、19c 和 12c 差不太多；二、有现成的Docker Image可以使用。 如需安装其他版本 Oracle 数据库，可以使用 Oracle 官方 Dockerfile 自己编译安装。 参考资料：Linux下安装docker以及docker安装Oracle19c的全部详细过程及各种问题解决 安装 Linux CentOS Ubuntu 安装 Docker CentOS 通过 yum 安装 Ubuntu 2204 Server 自带 Docker 方法一、使用 Docker apt 仓库 方法二、使用 deb 文件安装 方法三、使用脚本自动安装 安装 Oracle19c 拉取镜像 安装容器 进入容器 创建数据库 使用 A5M2 连接数据库 安装 Linux CentOS CentOS 7 将于2024年6月30日结束维护，届时将无法获得官方补丁安装支持和系统升级，推荐个人用户选择 Ubuntu。 Ubuntu 本次使用 Ubuntu 2204 Server版本，被称为目前最安全的 Ubuntu 版本。 安装 Docker CentOS 通过 yum 安装 1yum install -y docker 安装后查看 Docker 是否安装成功。 1yum list installed |grep docker Ubuntu 2204 Server 自带 Docker Ubuntu 2204 Server 安装引导中，可选安装 Docker 。 若是未安装，可以通过以下方法安装 Docker 。 参考自官方资料。 方法一、使用 Docker apt 仓库 先配置仓库，之后通过该仓库安装或升级 Docker。 配置 Docker apt 仓库 12345678910111213# 安装官方 GPG Keysudo apt-get updatesudo apt-get install ca-certificates curl gnupgsudo install -m 0755 -d /etc/apt/keyringscurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpgsudo chmod a+r /etc/apt/keyrings/docker.gpg# 添加 apt 仓库到 apt 源echo \\ &quot;deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \\ $(. /etc/os-release &amp;&amp; echo &quot;$VERSION_CODENAME&quot;) stable&quot; | \\ sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/nullsudo apt-get update 安装 Docker 软件包 安装最新版本 1sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin 安装指定版本 首先列出存储库中的可用版本 123456# List the available versions:apt-cache madison docker-ce | awk &#x27;&#123; print $3 &#125;&#x27;5:24.0.0-1~ubuntu.22.04~jammy5:23.0.6-1~ubuntu.22.04~jammy... 然后选择所需的版本并安装 12VERSION_STRING=5:24.0.0-1~ubuntu.22.04~jammysudo apt-get install docker-ce=$VERSION_STRING docker-ce-cli=$VERSION_STRING containerd.io docker-buildx-plugin docker-compose-plugin 检查是否安装成功 通过运行 hello-world 映像来验证 Docker Engine 安装是否成功。 1sudo docker run hello-world 方法二、使用 deb 文件安装 如果方法一无法安装，可以通过官方发布的 deb 文件进行安装或升级。 前往：https://download.docker.com/linux/ubuntu/dists/。 选择所需版本进行下载。 进入 pool/stable/ 选择软件架构，一般家用电脑使用amd64。 下载以下 deb 文件。 containerd.io_&lt;version&gt;_&lt;arch&gt;.deb docker-ce_&lt;version&gt;_&lt;arch&gt;.deb docker-ce-cli_&lt;version&gt;_&lt;arch&gt;.deb docker-buildx-plugin_&lt;version&gt;_&lt;arch&gt;.deb docker-compose-plugin_&lt;version&gt;_&lt;arch&gt;.deb 安装.deb 包。将下面示例中的路径修改为下载 deb 文件的位置。 12345sudo dpkg -i ./containerd.io_&lt;version&gt;_&lt;arch&gt;.deb \\ ./docker-ce_&lt;version&gt;_&lt;arch&gt;.deb \\ ./docker-ce-cli_&lt;version&gt;_&lt;arch&gt;.deb \\ ./docker-buildx-plugin_&lt;version&gt;_&lt;arch&gt;.deb \\ ./docker-compose-plugin_&lt;version&gt;_&lt;arch&gt;.deb 使用 hello-world 镜像，检查是否安装成功。 12sudo service docker startsudo docker run hello-world 方法三、使用脚本自动安装 curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun 安装 Oracle19c 拉取镜像 1docker pull registry.cn-hangzhou.aliyuncs.com/zhuyijun/oracle:19c 该步骤可以省略， docker run 可以自动拉取镜像 安装容器 1docker run -d -it --name orcl19c_03 -p 1521:1521 -p 5500:5500 -e ORACLE_SID=orcl -e ORACLE_PDB=orclPDB1 -e ORACLE_PWD=123456 -e ORACLE_EDITION=standard -e ORACLE_CHARACTERSET=AL32UTF8 -v /home/mydata/oracle/oracleData:/opt/myData/oracle/oracleData registry.cn-hangzhou.aliyuncs.com/zhuyijun/oracle:19c 上面的命令中 ORACLE_SID=orcl 是CDB数据库的服务名 ORACLE_PDB=orclPDB1 是PDB数据库的服务名 ORACLE_PWD=123456 是管理员密码 进入容器 查看容器 ID 1docker ps -a -a 显示全部，包括未启动的容器。 进入容器 1docker exec -it [1.容器id] bash 创建数据库 连接 Oracle 1sqlplus system/123456@127.0.0.1/orclPDB1 创建用户 1create user test1 identified by 123456; 赋予权限 1grant connect, resource to test1; 设置表领域配额上限 1alter user test1 quota unlimited on users; 设置密码不过期 1alter profile default limit password_life_time unlimited; 使用 A5M2 连接数据库 连接方式选择直接连接 填写主机名，端口 服务名：orclPDB1 用户ID：test1 密码：123456 勾上保存密码 点击测试连接 测试连接通过，点 OK 保存 施工中…","categories":[],"tags":[{"name":"linux","slug":"linux","permalink":"https://blog.tychen.cn/tags/linux/"},{"name":"ubuntu","slug":"ubuntu","permalink":"https://blog.tychen.cn/tags/ubuntu/"},{"name":"docker","slug":"docker","permalink":"https://blog.tychen.cn/tags/docker/"},{"name":"oracle","slug":"oracle","permalink":"https://blog.tychen.cn/tags/oracle/"},{"name":"环境配置","slug":"环境配置","permalink":"https://blog.tychen.cn/tags/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"}]},{"title":"Hexo+Github 搭建博客网站","slug":"Hexo-Github-搭建博客网站","date":"2023-11-22T02:22:22.000Z","updated":"2023-11-30T05:17:35.207Z","comments":true,"path":"/2023/11/22/Hexo-Github-搭建博客网站/","permalink":"https://blog.tychen.cn/2023/11/22/Hexo-Github-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/","excerpt":"记录一下此博客搭建的过程。 此博客使用 Github Pages 搭建 Hexo 静态博客网站，通过 Github Actions 实现持续集成（CI）以及持续部署（CD）。 参考： 使用 Hexo+GitHub 搭建个人免费博客教程（小白向）- 知乎 (zhihu.com) Hexo 通过 Github Actions 实现持续集成 - 知乎 (zhihu.com)","text":"记录一下此博客搭建的过程。 此博客使用 Github Pages 搭建 Hexo 静态博客网站，通过 Github Actions 实现持续集成（CI）以及持续部署（CD）。 参考： 使用 Hexo+GitHub 搭建个人免费博客教程（小白向）- 知乎 (zhihu.com) Hexo 通过 Github Actions 实现持续集成 - 知乎 (zhihu.com)","categories":[{"name":"Hexo","slug":"Hexo","permalink":"https://blog.tychen.cn/categories/Hexo/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://blog.tychen.cn/tags/Hexo/"}]},{"title":"Markdown 语法学习","slug":"Markdown-语法学习","date":"2023-11-20T06:19:03.000Z","updated":"2023-11-30T05:17:35.207Z","comments":true,"path":"/learn-markdown/","permalink":"https://blog.tychen.cn/learn-markdown/","excerpt":"需要用到Markdown写文章，为了加深印象，跟着官方教程做一遍。 官方教程链接：Markdown 官方中文教程","text":"需要用到Markdown写文章，为了加深印象，跟着官方教程做一遍。 官方教程链接：Markdown 官方中文教程 内容目录 基本语法 标题语法 可选语法 最佳实践 段落语法 最佳实践 换行语法 最佳实践 强调语法 粗体 斜体 粗体和斜体 最佳实践 引用语法 列表语法 有序列表 无序列表 代码语法 转义` 分割线语法 链接语法 简单链接 最佳实践 图片语法 图片超链接 转义字符 可转义字符 自动转义字符 扩展语法 轻量标记语言 表格 对齐 复杂表 围栏代码块 语法高亮 脚注 标题编号 链接到标题ID 自定义列表 删除线 任务列表 使用 Emoji 表情 复制粘贴 表情符号简码 自动网址链接 用代码块删除网址链接 基本语法 标题语法 Markdown Html 预览 # 一级标题 &lt;h1&gt;一级标题&lt;/h1&gt; ## 二级标题 &lt;h2&gt;二级标题&lt;/h2&gt; ### 三级标题 &lt;h3&gt;三级标题&lt;/h3&gt; #### 四级标题 &lt;h4&gt;四级标题&lt;/h4&gt; ##### 五级标题 &lt;h5&gt;五级标题&lt;/h5&gt; ###### 六级标题 &lt;h6&gt;六级标题&lt;/h6&gt; ####### 七级没有 &lt;h7&gt;七级没有&lt;/h7&gt; ####### 七级没有 可选语法 1234一级标题=======二级标题------- 最佳实践 # 与标题之间加一个空格。 段落语法 空行分段。 这是一段话，这是一段话，这是一段话，这是一段话，这是一段话， 这是一段话，这是一段话，这是一段话，这是一段话，这是一段话， 这是一段话，这是一段话，这是一段话，这是一段话，这是一段话， 最佳实践 不要在段首加空格。 换行语法 在行尾加上两个或以上的空格。 Markdown Html 预览 这是第一段话 这是第二段话 这是第一段话&lt;br&gt;这是第二段话 这是第一段话这是第二段话 最佳实践 行尾空格不好看，可以使用HTML标签 &lt;br&gt; 。 强调语法 粗体 Markdown Html 预览 **粗体**文本 &lt;strong&gt;粗体&lt;/strong&gt;文本 粗体文本 __粗体__文本 &lt;strong&gt;粗体&lt;/strong&gt; 文本 粗体 文本 斜体 Markdown Html 预览 *斜体*文本 &lt;em&gt;斜体&lt;/em&gt;文本 斜体文本 _斜体_文本 &lt;em&gt;斜体&lt;/em&gt; 文本 斜体 文本 粗体和斜体 Markdown Html 预览 ***粗斜体***文本 &lt;strong&gt;&lt;em&gt;粗斜体&lt;/em&gt;&lt;/strong&gt;文本 粗斜体文本 ___粗斜体___文本 &lt;strong&gt;&lt;em&gt;粗斜体&lt;/em&gt;&lt;/strong&gt; 文本 粗斜体 文本 最佳实践 用 * 。 引用语法 在段首用 &gt; 。 列表语法 有序列表 Markdown Html 预览 1. 第一项2. 第二项3. 第三项 &lt;ol&gt;&lt;li&gt;第一项&lt;/li&gt;&lt;li&gt;第二项&lt;/li&gt;&lt;li&gt;第三项&lt;/li&gt;&lt;/ol&gt; 第一项第二项第三项 无序列表 Markdown Html 预览 - 第一项- 第二项- 第三项 &lt;ul&gt;&lt;li&gt;第一项&lt;/li&gt;&lt;li&gt;第二项&lt;/li&gt;&lt;li&gt;第三项&lt;/li&gt;&lt;/ul&gt; 第一项第二项第三项 + 第一项+ 第二项+ 第三项 &lt;ul&gt;&lt;li&gt;第一项&lt;/li&gt;&lt;li&gt;第二项&lt;/li&gt;&lt;li&gt;第三项&lt;/li&gt;&lt;/ul&gt; 第一项第二项第三项 * 第一项* 第二项* 第三项 &lt;ul&gt;&lt;li&gt;第一项&lt;/li&gt;&lt;li&gt;第二项&lt;/li&gt;&lt;li&gt;第三项&lt;/li&gt;&lt;/ul&gt; 第一项第二项第三项 代码语法 用 ` 。 Markdown Html 预览 这是`代码` 这是&lt;code&gt;代码&lt;/code&gt; 这是代码 转义` 用 `` 。 Markdown Html 预览 `这是``代码``.` 这是&lt;code&gt;`代码`&lt;/code&gt; 这是`代码`. 分割线语法 用 --- ___ *** 预览： 链接语法 用 [超链接显示名](超链接地址 &quot;超链接title&quot;) 。 对应的HTML： &lt;a href=&quot;超链接地址&quot; title=&quot;超链接title&quot;&gt;超链接显示名&lt;/a&gt; 预览： 晨天雨小寒 - Markdown 语法整理 #链接语法 简单链接 用 &lt;&gt; 。 &lt;https://blog.tychen.cn&gt; &lt;mail@tychen.cn&gt; 预览： https://blog.tychen.cn mail@tychen.cn 最佳实践 使用 %20 代替URL中的空格。 图片语法 用![图片alt](图片链接 &quot;图片title&quot;) 对应的HTML： &lt;img src=&quot;图片链接&quot; alt=&quot;图片alt&quot; title=&quot;图片title&quot;&gt; 预览： 图片超链接 [![裂开的图](裂开的图.jpg &quot;裂开的图的Title&quot;)](https://blog.tychen.cn/learn-markdown/#图片语法) 预览： 转义字符 用 \\ 。 可转义字符 字符 名字 \\ 反斜线 ` 反引号 * 星号 _ 下划线 &#123; &#125; 大括号 [ ] 中括号 ( ) 括号 # 井号 + 加号 - 减号 . 句点 ! 叹号 | 竖线 自动转义字符 &lt; 和 &amp; 。 扩展语法 并不兼容所有 Markdown 应用程序。 轻量标记语言 Markdown 的超集， 有以下几种： CommonMark GitHub Flavored Markdown (GFM) Markdown Extra MultiMarkdown R Markdown 表格 用 | 分列，用 --- 分隔表头。 123| 表头 | 表头 || ---- | ---- || 表体 | 表体 | 预览： 表头 表头 表体 表体 对齐 用 : 。 123| 居左预览 | 居中预览 | 居右预览 || :------- | :------: | -------: || 居左 | 居中 | 居右 | 预览： 居左预览 居中预览 居右预览 居左 居中 居右 复杂表 Markdown 表格无法做到合并单元格，添加标题，列表，引用等。 因此用 HTML 表格替代。 围栏代码块 用 ``` 包裹。 语法高亮 在 ``` 后指定语言。 12# Markdown一级标题&lt;br&gt;正文**加粗***斜体*&lt;br&gt; 预览： 12# Markdown一级标题&lt;br&gt;正文**加粗***斜体*&lt;br&gt; 脚注 用 [^1] 创建脚注链接，用 [^1]: 脚注 创建脚注内容。 这是一段话，这里加个脚注^1。 失败了······ 有空再研究 标题编号 1### 自定义标题编号 &#123;#custom-id&#125; 预览： 当前主题不支持 链接到标题ID 1[标题编号](#标题编号) 预览： 标题编号 自定义列表 123456第一行: 第一行的内容第二行: 第二行的内容: 第二行的内容 预览： 第一行 : 第一行的内容 第二行 : 第二行的内容 : 第二行的内容 当前主题渲染有问题 删除线 用 ~~ 包裹。 ~~删除线~~ 预览： 删除线 任务列表 用 - [ ] 和 - [X] 。 123- [X] 第一项已完成- [ ] 第二项- [ ] 第三项 预览： [X] 第一项已完成 [ ] 第二项 [ ] 第三项 使用 Emoji 表情 复制粘贴 从Emojipedia复制粘贴表情🫶。 表情符号简码 参考 https://gist.github.com/rxaviers/7360908 当前主题不支持 自动网址链接 http://www.example.com 用代码块删除网址链接 `http://www.example.com` 完","categories":[{"name":"Markdown","slug":"Markdown","permalink":"https://blog.tychen.cn/categories/Markdown/"}],"tags":[{"name":"学习","slug":"学习","permalink":"https://blog.tychen.cn/tags/%E5%AD%A6%E4%B9%A0/"},{"name":"Markdown","slug":"Markdown","permalink":"https://blog.tychen.cn/tags/Markdown/"}]},{"title":"Hello World","slug":"hello-world","date":"2023-11-20T06:19:03.000Z","updated":"2023-11-30T05:17:35.207Z","comments":true,"path":"/2023/11/20/hello-world/","permalink":"https://blog.tychen.cn/2023/11/20/hello-world/","excerpt":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick Start Create a new post 1$ hexo new &quot;My New Post&quot; More info: Writing Run server 1$ hexo server More info: Server Generate static files 1$ hexo generate More info: Generating Deploy to remote sites 1$ hexo deploy More info: Deployment","categories":[{"name":"Hexo","slug":"Hexo","permalink":"https://blog.tychen.cn/categories/Hexo/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://blog.tychen.cn/tags/Hexo/"}]}],"categories":[{"name":"Hexo","slug":"Hexo","permalink":"https://blog.tychen.cn/categories/Hexo/"},{"name":"Markdown","slug":"Markdown","permalink":"https://blog.tychen.cn/categories/Markdown/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://blog.tychen.cn/tags/linux/"},{"name":"ubuntu","slug":"ubuntu","permalink":"https://blog.tychen.cn/tags/ubuntu/"},{"name":"docker","slug":"docker","permalink":"https://blog.tychen.cn/tags/docker/"},{"name":"oracle","slug":"oracle","permalink":"https://blog.tychen.cn/tags/oracle/"},{"name":"环境配置","slug":"环境配置","permalink":"https://blog.tychen.cn/tags/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"},{"name":"Hexo","slug":"Hexo","permalink":"https://blog.tychen.cn/tags/Hexo/"},{"name":"学习","slug":"学习","permalink":"https://blog.tychen.cn/tags/%E5%AD%A6%E4%B9%A0/"},{"name":"Markdown","slug":"Markdown","permalink":"https://blog.tychen.cn/tags/Markdown/"}]}